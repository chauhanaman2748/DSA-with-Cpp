int lowerBound(vector<int> arr, int n, int x)
{
    // Write your code here
    int start = 0, end = n - 1, res = n;
    while (start <= end)
    {
        int mid = start + (end - start) / 2;
        if (arr[mid] < x)
            start = start + 1;
        else
        {
            end = mid - 1;
            res = mid;
        }
    }
    return res;
}

int upperBound(vector<int> &arr, int x, int n)
{
    // Write your code here.
    int start = 0, end = n - 1, res = n;

    while (start <= end)
    {
        int mid = start + (end - start) / 2;
        if (arr[mid] <= x)
        {
            start = mid + 1;
        }
        else
        {
            res = mid;
            end = mid - 1;
        }
    }
    return res;
}