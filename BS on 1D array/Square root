// Complexity: O(log'n')
int floorSqrt(int n)
{
    if (n == 0 || n == 1) // Base cases
        return n;

    int start = 1, end = n, ans;
    while (start <= end)
    {
        int mid = start + (end - start) / 2;
        if (mid <= n / mid)
        {
            ans = mid;
            start = mid + 1;
        }
        else
        {
            end = mid - 1;
        }
    }
    return ans;
}

// Complexity: O(sqrt'n')
int floorSqrt(int n)
{
    int i;
    for (i = 0; i * i < n; i++)
    {
    }
    return (i * i == n) ? i : i - 1;
}
